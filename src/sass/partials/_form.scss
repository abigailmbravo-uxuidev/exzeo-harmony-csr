@import "_variables";
@import "utilities/_borders"; // scss-lint:disable QualifyingElement
$input-height: 2rem; //
// Textual form controls
//

input,
select,
textarea {
  height: $input-height;
  // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  //padding: $input-padding-y $input-padding-x;
  padding: 0;
  color: $input-color;
  //border: $input-btn-border-width solid $input-border-color;
  //background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  border: 1px solid $warm-gray-06;
  background-color: transparent;
  background-image: none;
  background-clip: padding-box;
  font-size: $font-size-base;
  line-height: $input-line-height;
  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s);
  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  &[type="checkbox"] {
    position: relative;
    width: 1rem;
    height: 1rem;
    box-shadow: none;
    line-height: 1;
  }

  &[type="range"] {
    border-width: 0;
    box-shadow: none;
  }

  &[type="radio"] {
    position: relative;
    width: 1rem;
    height: 1rem;
    box-shadow: none;
    line-height: 1;
  }

  &[type="date"] {
    @include for-phone-only {
      width: 100%;
    }
  }

  &[type="file"] {
    width: 100%;
    //box-shadow: none;
  }

  &.react-tagsinput-input {
    height: calc(2rem - 2px);
    margin: 0;
    padding: 0;
    border-width: 0;
  }
  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }
  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }
  // Placeholder
  &::placeholder {
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
    color: $input-color-placeholder;
    font-style: italic;
  }
  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[disabled="disabled"],
  &[readonly] {
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
    border-color: $warm-gray-02;
    background-color: $input-bg-disabled;
  }

  &:disabled,
  &[disabled="disabled"] {
    cursor: $cursor-disabled;
  }
}

input,
textarea {
  width: 100%;
  padding: ($padding/2);
  background: $white;
  box-shadow: none;
}

select {
  background: $white;
  //margin-top: $padding*.825;
  box-shadow: none;
  /* &:not([size]):not([multiple]) {
      width: 100%;
      height: calc(#{$input-height} - #{$select-border-width});
      $select-border-width: ($border-width * 2);
    } */
  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}
//combobox

.Select {
  margin-bottom: 1rem;

  .Select-control {
    border: 1px solid $warm-gray-06;

    .Select-multi-value-wrapper {
      .Select-placeholder {}

      .Select-input {
        width: 100%;

        input[role="combobox"] {
          width: 100%;
          height: 2.125rem;
          padding: 0;
          line-height: 2.125rem;
        }
      }
    }
  }

  &.is-focused {
    &.is-open {
      .Select-value {
        background: rgba($warm-gray-04, .1);
      }
    }

    &:not(.is-open) {
      .Select-control {
        color: $input-color-focus;
        border-color: $input-border-focus;
        outline: none;
        background-color: $input-bg-focus;
        box-shadow: none;
      }
    }
  }

  .Select-menu-outer {
    overflow: hidden;
    width: 100%;
    border-color: $input-border-focus;
    border-top-style: dotted;
    border-top-color: $warm-gray-06;
    border-radius: 0 0 $border-radius $border-radius;
    box-shadow: 0 4px 4px 2px rgba($black, .1);

    .Select-option {
      &.is-selected,
      &.is-selected.is-focused {
        background: rgba($bright-blue, .3);
      }

      &.is-focused {
        background: rgba($bright-blue, .1);
      }
    }
  }
}
//
// Legends
//
// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.

.col-form-legend {
  margin-bottom: 0;
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  font-size: $font-size-base;
}
// Static form control text
//
// Apply class to an element to make any string of text align with labels in a
// horizontal form layout.

.form-control-static {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  border: solid transparent;
  border-width: 1px 0;
  line-height: $input-line-height;
}
// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

label {
  color: $warm-gray-08;
  font-size: $font-size-h5;
  font-weight: $font-weight-bold;
}

.form-group {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin-bottom: $form-group-margin-bottom;
  padding: 0;

  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    flex-basis: 100%;
  }

  &.row[role="group"] {
    margin: 0 -($padding/2);
  }

  &.row {
    flex-direction: row;
  }

  .__react_component_tooltip {
    z-index: 900;
  }

  label {
    @include transition(all 0.2s ease-in-out);
  }

  &.disabled,
  &.disabled.error {
    label {}
  }

  input[type="tel"] {}

  &.segmented {
    label {
      &.label-segmented {
        display: flex;
        align-items: center;
        justify-content: space-between;

        > input[type="text"] {
          flex-basis: 6.5rem;
        }
      }
    }

    .initial-value .segmented-answer-wrapper,
    .segmented-answer-wrapper {
      display: flex;
      flex-direction: row;
      @include for-phone-only {
        flex-direction: column;
      }

      div {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        flex-shrink: 0;
        width: auto;

        &:hover {
          cursor: pointer;
        }

        .label-segmented {
          display: flex;
          flex-direction: column;
          flex-grow: 1;
          flex-shrink: 0;
          margin-bottom: 0;
          border-right: 2px solid $white;

          span {
            display: flex;
            align-items: center;
            flex-grow: 1;
            justify-content: center;
            width: 100%;
            height: 2rem;
            padding: ($padding);
            cursor: pointer;
            user-select: none;
            text-align: center;
            vertical-align: middle;
            white-space: initial;
            border: $input-btn-border-width solid transparent;
            font-weight: $btn-font-weight;
            line-height: 1;
            @include transition(all 0.2s ease-in-out);
            @include button-variant($warm-gray-08, $warm-gray-02, $warm-gray-02);
            @include for-phone-only {
              border-radius: $border-radius;
            }

            &,
            &.active,
            &:active {
              &.focus,
              &:focus {
                @include tab-focus();
              }
            }
          }

          &.selected {
            span {
              color: $white;
              background: $bright-blue-darken-04;
            }
          }

          input[type=radio] {
            display: none;

            &:checked {
              + span {
                color: $white;
                background: $bright-blue-darken-04;
              }
            }
          }
        }
      }

      div:first-child {
        span {
          border-radius: $border-radius 0 0 $border-radius;
          @include for-phone-only {
            border-radius: $border-radius;
          }
        }
      }

      div:last-child {
        .label-segmented {
          border-right-width: 0;
        }

        span {
          border-radius: 0 $border-radius $border-radius 0;
          @include for-phone-only {
            border-radius: $border-radius;
          }
        }
      }

      &.error {
        div {
          .label-segmented {
            span {
              color: $red-lighten-01;
              border-color: $red-lighten-01;
            }
          }
        }
      }
    }

    .installment-term {
      display: flex;
      flex-wrap: wrap;

      .column-3 {
        width: 33.33%;
        padding: 0;
        border-right: 2px solid $white;
        @include for-phone-only {
          width: 100%;
        }

        dt {
          padding: (.25*$padding) $padding;

          span {
            display: none;
            font-size: $font-size-h4;
            @include for-phone-only {
              display: block;
            }
          }
        }

        dd {
          padding: (.25*$padding) $padding;
        }
      }
    }

    &.disabled,
    &.disabled.invalid {
      cursor: not-allowed;

      .segmented-answer-wrapper {
        cursor: not-allowed;

        div {
          cursor: not-allowed;

          .label-segmented {
            cursor: not-allowed;
            border-right: 1px solid $warm-gray-01;

            span {
              cursor: not-allowed;
              @include button-variant($warm-gray-04, $warm-gray-01, $warm-gray-01);
            }

            &.selected {
              span {
                cursor: not-allowed;
                color: $white;
                background: rgba($bright-blue-darken-04, .5);
              }
            }

            input[type=radio] {
              &:checked {
                cursor: not-allowed;

                + span {
                  cursor: not-allowed;
                  color: $warm-gray-05;
                  background: $warm-gray-03;
                }
              }
            }
          }
        }
      }

      span {
        cursor: not-allowed;
        border-color: $warm-gray-02;
      }

      label {
        cursor: not-allowed;

        &.label-segmented {
          cursor: not-allowed;

          span {
            cursor: not-allowed;
            color: $warm-gray-03;
          }
        }
      }

      input[type=radio] {
        cursor: not-allowed;

        &:checked {
          cursor: not-allowed;

          + span {
            cursor: not-allowed;
            color: $warm-gray-03;
            background: $warm-gray-01;
          }
        }
      }
    }
  }

  &.switch {
    flex-direction: row;
    flex-wrap: wrap;

    label {
      display: flex;
      align-items: center;
      flex-direction: row;
      justify-content: space-between;
      width: 100%;
      margin-bottom: 0;
      line-height: 1.45;

      span {
        flex-grow: 1;
      }

      input[type="checkbox"],
      input[type="radio"] {
        display: none;

        &:checked {
          + div.switch-div {
            background-color: $bright-blue-darken-04;

            &:before {
              -webkit-transform: translateX(2rem);
              -ms-transform: translateX(2rem);
              transform: translateX(2rem);
              border-color: $cool-gray-01;
              background-color: lighten($cool-gray-00, 10%);
            }

            &:after {
              top: 0.25rem;
              left: 0.5rem;
              content: "Yes";
              color: $white;
            }

            &.disabled {
              background-color: $cool-gray-00;

              &:after {
                color: $cool-gray-01;
              }
            }
          }
        }
      }

      div.switch-div {
        position: relative;
        flex-basis: 3.5rem;
        flex-grow: 0;
        flex-shrink: 0;
        width: 3.5rem;
        height: 1.5rem;
        margin: 0.225rem 0;
        cursor: pointer;
        -webkit-transition: 0.4s;
        transition: 0.4s;
        color: $warm-gray-08;
        border-radius: 0.75rem;
        background: $warm-gray-03;

        &:before {
          position: absolute;
          z-index: 2;
          width: 1.5rem;
          height: 1.5rem;
          content: "";
          -webkit-transition: 0.4s;
          transition: 0.4s;
          border: 1px solid $cool-gray-01;
          border-radius: 50%;
          background-color: lighten($cool-gray-00, 10%);
          box-shadow: $input-box-shadow;
          line-height: 1;
        }

        &:after {
          position: absolute;
          z-index: 1;
          top: 0.25rem;
          left: 2rem;
          content: "No";
          font-size: 0.7rem;
          font-weight: $font-weight-bold;
        }
      }
    }

    &.disabled,
    &.disabled.invalid {
      cursor: not-allowed;

      label {
        cursor: not-allowed;
        color: $text-muted;
      }

      div {
        cursor: not-allowed;
        background-color: $warm-gray-01;

        &:after {
          cursor: not-allowed;
          color: $warm-gray-03;
        }

        &:before {
          cursor: not-allowed;
          border-color: $warm-gray-02;
          background-color: $warm-gray-01;
        }
      }

      input[type="checkbox"],
      input[type="radio"] {
        display: none;

        &:checked {
          + div {
            background-color: $warm-gray-01;

            &:after {
              color: $warm-gray-03;
            }
          }
        }
      }
    }

    &.error {
      label {
        color: $red-lighten-01;
      }

      div {
        background-color: $red-lighten-01;

        &:after {
          color: $white;
        }

        &:before {
          border-color: $red;
          background-color: $red-lighten-03;
        }
      }

      input[type="checkbox"],
      input[type="radio"] {
        display: none;

        &:checked {
          + div {
            background-color: $red-lighten-01;

            &:after {
              color: $white;
            }
          }
        }
      }
    }

    &.verification {
      position: relative;
      flex-direction: column;

      label {
        flex-direction: row-reverse;
        justify-content: flex-start;
        margin-right: 2rem;

        &:before {
          position: absolute;
          top: 0.25rem;
          left: -.25rem;
          display: block;
          width: 9rem;
          padding: 0.25rem;
          content: 'VERIFY HERE';
          text-align: center;
          color: $red-darken-02;
          border-top-left-radius: 0.125rem;
          border-bottom-left-radius: 0.125rem;
          background: $orange-lighten-01;
          font: normal normal normal 1rem $font-family-sans-serif;
          line-height: 1;
          @include for-phone-only {
            left: -.75rem;
            width: 8rem;
            font-size: 0.875rem;
          }
        }

        &:after {
          position: absolute;
          top: 0.25rem;
          left: 8.75rem;
          width: 0;
          height: 0;
          content: '';
          border-top: 0.75rem solid transparent;
          border-bottom: 0.75rem solid transparent;
          border-left: 1rem solid $orange-lighten-01;
          @include for-phone-only {
            left: 7.25rem;
            border-top: 0.6875rem solid transparent;
            border-bottom: 0.6875rem solid transparent;
          }
        }

        div {
          margin-right: 0.5rem;
        }

        span {
          position: relative;
          flex-grow: 1;
          height: 1px;
          margin-right: 0.5rem;
          cursor: pointer;
          background: $warm-gray-02;

          &:before {
            position: absolute;
            top: -.75rem;
            left: -.75rem;
            display: block;
            width: 1.5rem;
            padding: 0.25rem;
            content: '\f14a';
            text-align: center;
            color: $yellow-lighten-05;
            border-top-left-radius: 0.125rem;
            border-bottom-left-radius: 0.125rem;
            background: $yellow;
            font: normal normal normal 1rem $font-family-icon;
          }

          &:after {
            position: absolute;
            top: -.75rem;
            left: 0.75rem;
            width: 0;
            height: 0;
            content: '';
            border-top: 0.75rem solid transparent;
            border-bottom: 0.75rem solid transparent;
            border-left: 1rem solid $yellow;
          }
        }

        input[type="checkbox"] {
          &:checked {
            ~ span {
              &:before {
                //content: '\f14a';
                color: $green;
                background: $warm-gray-02;
              }

              &:after {
                border-left-color: $warm-gray-02;
              }
            }
          }
        }
      }
    }

    &.confirm {
      position: relative;
      flex-direction: column;

      label {
        flex-direction: row-reverse;
        justify-content: flex-start;
        margin-right: 2rem;

        &:before {
          position: absolute;
          top: 0.25rem;
          left: -.25rem;
          display: block;
          width: 9rem;
          padding: 0.25rem;
          content: 'CONFIRM HERE';
          text-align: center;
          color: $red-darken-02;
          border-top-left-radius: 0.125rem;
          border-bottom-left-radius: 0.125rem;
          background: $orange-lighten-01;
          font: normal normal normal 1rem $font-family-sans-serif;
          line-height: 1;
          @include for-phone-only {
            left: -.75rem;
            width: 8rem;
            font-size: 0.875rem;
          }
        }

        &:after {
          position: absolute;
          top: 0.25rem;
          left: 8.75rem;
          width: 0;
          height: 0;
          content: '';
          border-top: 0.75rem solid transparent;
          border-bottom: 0.75rem solid transparent;
          border-left: 1rem solid $orange-lighten-01;
          @include for-phone-only {
            left: 7.25rem;
            border-top: 0.6875rem solid transparent;
            border-bottom: 0.6875rem solid transparent;
          }
        }

        div {
          margin-right: 0.5rem;
        }

        span {
          position: relative;
          flex-grow: 1;
          height: 1px;
          margin-right: 0.5rem;
          cursor: pointer;
          background: $warm-gray-02;

          &:before {
            position: absolute;
            top: -.75rem;
            left: -.75rem;
            display: block;
            width: 1.5rem;
            padding: 0.25rem;
            content: '\f14a';
            text-align: center;
            color: $yellow-lighten-05;
            border-top-left-radius: 0.125rem;
            border-bottom-left-radius: 0.125rem;
            background: $yellow;
            font: normal normal normal 1rem $font-family-icon;
          }

          &:after {
            position: absolute;
            top: -.75rem;
            left: 0.75rem;
            width: 0;
            height: 0;
            content: '';
            border-top: 0.75rem solid transparent;
            border-bottom: 0.75rem solid transparent;
            border-left: 1rem solid $yellow;
          }
        }

        input[type="checkbox"] {
          &:checked {
            ~ span {
              &:before {
                //content: '\f14a';
                color: $green;
                background: $warm-gray-02;
              }

              &:after {
                border-left-color: $warm-gray-02;
              }
            }
          }
        }
      }
    }
  }

  &.segmented-switch {
    position: relative;
    height: 4.4375rem;

    label {
      z-index: 2;
      display: flex;
      flex-direction: column;

      input[type="checkbox"] {
        position: absolute;
        bottom: 0;
        display: block;
        width: 50%;
        height: 2rem;
        margin: 0;
        cursor: pointer;
        opacity: 0;
      }
    }

    &:before {
      position: absolute;
      z-index: 1;
      bottom: 0;
      left: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      width: calc(50% - 1px);
      height: 2rem;
      content: 'YES';
      border: 1px solid $warm-gray-02;
      border-radius: $border-radius 0 0 $border-radius;
      font-weight: $font-weight-bold;
      @include transition(all 0.2s ease-in-out);
    }

    &:after {
      position: absolute;
      z-index: 1;
      right: 0;
      bottom: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      width: calc(50% - 1px);
      height: 2rem;
      content: 'NO';
      border: 1px solid $warm-gray-02;
      border-radius: 0 $border-radius $border-radius 0;
      font-weight: $font-weight-bold;
      @include transition(all 0.2s ease-in-out);
    }

    &.active {
      &:before {
        color: $white;
        background: $bright-blue-darken-04;
      }

      &:after {
        color: $warm-gray-14;
        background: $warm-gray-02;

        &:hover {
          background: $warm-gray-01;
        }
      }

      label {
        input[type="checkbox"] {
          right: 0;
        }
      }
    }

    &.inactive {
      &:before {
        color: $warm-gray-14;
        background: $warm-gray-02;

        &:hover {
          background: $warm-gray-01;
        }
      }

      &:after {
        color: $white;
        background: $bright-blue-darken-04;
      }

      label {
        input[type="checkbox"] {
          left: 0;
        }
      }
    }
  }

  &.error {
    input,
    select,
    textarea {
      border: solid 1px $red;
    }

    span {
      color: $red;
      font-size: $font-size-sm;
      line-height: 1.4;
    }

    .react-tagsinput {
      border-color: $red;

      > span {
        .react-autosuggest__container {
          .react-tagsinput-input {
            border-width: 0;
          }
        }

        .react-autosuggest__suggestions-container {
          border-color: $red;

          ul {
            li {
              span {
                color: $warm-gray-10;
                font-size: $font-size-base;
              }
            }
          }
        }
      }
    }
  }

  &.info {
    span {
      color: $green;
    }
  }
}

.react-tagsinput {
  overflow: visible;
  min-height: $input-height;
  padding: 0;
  border: 1px solid $warm-gray-06;
  border-radius: $border-radius;

  > span {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    line-height: 1;
    //CHIP
    .react-tagsinput-tag {
      display: flex;
      align-items: center;
      flex-grow: 0;
      flex-shrink: 0;
      justify-content: center;
      width: auto;
      margin: $padding/4;
      padding-left: $padding*1.5;
      color: $white;
      border-width: 0;
      border-radius: 1rem;
      background: $bright-blue-darken-04;
      font-family: $font-family-sans-serif;
      font-size: $font-size-base;
      font-weight: $font-weight-normal;
      @include transition(all 0.2s ease-in-out);

      .react-tagsinput-remove {
        margin-left: $padding;
        @include transition(all 0.2s ease-in-out);

        &:before {
          content: '\f057';
          color: rgba($white, .5);
          font-family: $font-family-icon;
          @include transition(all 0.2s ease-in-out);
        }

        &:hover {
          &:before {
            color: rgba($white, 1);
          }
        }
      }
    }

    .react-autosuggest__container {
      position: relative;
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      flex-shrink: 1;
      width: auto;
      min-width: 10rem;

      .react-tagsinput-input {
        flex-grow: 1;
        flex-shrink: 1;
        width: 100%;
        padding-right: 1.5rem;
        padding-left: $padding;
        font-family: $font-family-sans-serif;
        font-weight: $font-weight-normal;
      }

      &:after {
        position: absolute;
        top: 0;
        right: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2rem;
        height: 2rem;
        content: '\f0d7';
        color: $warm-gray-06;
        font-family: $font-family-icon;
      }

      &.react-autosuggest__container--open {
        .react-tagsinput-input {
          border-top: 1px solid rgba($warm-gray-04, .3);
          border-right: 1px solid rgba($warm-gray-04, .3);
          border-left: 1px solid rgba($warm-gray-04, .3);
          border-radius: 0;
          background: rgba($warm-gray-04, .1);
        }

        &:after {
          content: '\f0d8';
        }
      }

      .react-autosuggest__suggestions-container {
        position: absolute;
        top: 30px;
        left: 2px;
        width: calc(100% - 4px);
        padding: 0;
        opacity: 0;
        border-width: 1px;
        border-style: solid;
        border-color: $input-border-focus;
        border-top-style: dotted;
        border-top-color: $warm-gray-06;
        border-radius: 0 0 $border-radius $border-radius;
        background: $white;
        box-shadow: 0 4px 4px 2px rgba($black, .1);
        overflow: hidden;

        &.react-autosuggest__suggestions-container--open {
          opacity: 1;
        }

        ul {
          margin: 0;
          padding: 0;
          list-style: none;
          font-family: $font-family-sans-serif;
          max-height: 12.5rem;
          overflow-y: auto;
          overflow-x: hidden;

          li {
            display: flex;
            align-items: center;
            min-height: 2rem;
            padding: $padding;
            color: $warm-gray-10;

            &:hover, &[aria-selected='true'] {
              cursor: pointer;
              background: rgba($bright-blue, .1);
            }
          }
        }
      }
    }
  }
}

.form-group.segmented.BillType {
  .segmented-answer-wrapper {
    div {
      width: 33.33%;
    }
  }
}

.submit-button-group {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  width: 100%;

  button[type="submit"] {
    margin-left: 1rem;
  }
}
/*
  &.disabled,
  &.disabled.invalid,
  &[disabled="disabled"] {
    cursor: $cursor-disabled;
    color: $text-muted;

    input,
    select,
    textarea {
      cursor: $cursor-disabled;
      color: $text-muted;
    }
  }
*/
ul.list,
ul.results {
  z-index: 1;
  margin: 0;
  padding: 0;
  list-style: none;

  &.list-cards {
    li {
      z-index: 1;
      display: flex;
      align-items: flex-start;
      flex-direction: row;
      width: 100%;
      padding: $padding $padding*1.5;
      text-decoration: none;
      border: $card-border-width solid $card-border-color;
      border-top-width: 0;
      border-radius: 0;
      box-shadow: $card-box-shadow;
      @include transition(all 0.2s ease-in-out);

      &:first-child {
        border-top-width: $card-border-width;
        border-top-left-radius: $card-border-radius;
        border-top-right-radius: $card-border-radius;
      }

      &:last-child {
        border-bottom-right-radius: $card-border-radius;
        border-bottom-left-radius: $card-border-radius;
      }

      section {
        flex-grow: 1;

        h2,
        h3,
        h4,
        h5 {
          margin: 0;
        }

        p {
          margin: 0;
        }
      }

      ul.list {
        flex-basis: 12rem;
        flex-grow: 0;
        flex-shrink: 0;
        width: 12rem;
        border-right: 1px solid $border-color;

        li {
          border-width: 0;
          box-shadow: none;

          &:first-child {
            border-width: 0;
          }
        }
      }

      i {
        &.fa-trash {
          display: flex;
          align-items: center;
          flex-basis: 2rem;
          flex-shrink: 0;
          justify-content: flex-end;
          width: 2rem;
          height: 2.4rem;
          margin: 0;
          cursor: pointer;
          font-size: $font-size-h4;
          @include transition(all 0.2s ease-in-out);

          &:hover {
            color: $red;
          }
        }
      }
    }
  }

  &.result-cards {
    li {
      display: flex;
      flex-direction: row;
      margin-bottom: $padding/2;
      border-bottom: none;

      a {
        z-index: 1;
        display: flex;
        align-items: center;
        flex-direction: row;
        width: 100%;
        padding: $padding $padding*1.5;
        text-decoration: none;
        border: $card-border-width solid $card-border-color;
        border-radius: $card-border-radius;
        box-shadow: $card-box-shadow;
        @include transition(all 0.2s ease-in-out);

        section {
          flex-grow: 1;

          h2,
          h3,
          h4,
          h5 {
            margin: 0;
          }

          p {
            margin: 0;
          }
        }

        i {
          display: flex;
          align-items: center;
          flex-direction: row;
          justify-content: center;
          width: 2rem;
          height: 2rem;
          font-size: $font-size-h2;
          @include transition(all 0.2s ease-in-out);

          &.fa-pencil {
            font-size: $font-size-h4;
          }

          &.card-icon {
            margin-right: $padding;
          }

          &.fa-map-marker {
            justify-content: flex-start;
          }
        }

        &:hover {
          z-index: 2;
          transform: scale(1.004);
          box-shadow: $card-box-shadow-hover;

          h2,
          h3,
          h4,
          h5 {}
        }
      }
    }

    p {
      margin-bottom: 0;
    }
  }
}

form + form {
  margin-top: $padding*2;
}

input[type="checkbox"] {
  display: inline-block;
  margin: 0 0 0 10px;
}

.child-element {
  margin-bottom: ($padding*2);
  margin-left: ($padding*2);
  padding-left: ($padding*2);
  border-left: solid 3px $cool-gray-08;
}

.flex-header-wrap {
  display: flex;
  align-items: baseline;

  input[type="checkbox"] {
    margin-right: $padding/2;
  }
}
